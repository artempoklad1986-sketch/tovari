<!doctype html>
<html lang="ru">
<head>
  <meta charset="utf-8">
  <title>Фото‑заказ онлайн — Типография ПРИНТСС</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    :root{--text:#ecf0ff; --muted:#b9bed3; --accent:#ff8c00; --violet:#8a2be2;}
    *{box-sizing:border-box} body{margin:0; font-family:Inter,system-ui,Segoe UI,Arial; color:var(--text); overflow-x:hidden; background:#0b0d16}
    .bg{position:fixed; inset:0; z-index:-2;}
    .bgv{position:absolute; inset:0; width:100%; height:100%; object-fit:cover; filter:brightness(.45) saturate(1.18)}
    .gradient{position:absolute; inset:0; background:radial-gradient(800px 800px at 15% 25%, rgba(255,140,0,0.28), transparent 60%), radial-gradient(900px 900px at 85% 20%, rgba(138,43,226,0.30), transparent 60%)}
    .orb{position:absolute; border-radius:50%; filter:blur(28px); opacity:.6}
    .o1{width:420px; height:420px; left:8%; top:6%; background:#ff8c00; animation:float 16s ease-in-out infinite}
    .o2{width:560px; height:560px; right:-4%; bottom:8%; background:#8a2be2; animation:float2 20s ease-in-out infinite}
    .o3{width:260px; height:260px; left:40%; bottom:20%; background:#ffffff22; animation:float3 22s ease-in-out infinite}
    @keyframes float{0%,100%{transform:translateY(0)}50%{transform:translateY(22px)}}
    @keyframes float2{0%,100%{transform:translate(0,0)}50%{transform:translate(-20px,-14px)}}
    @keyframes float3{0%,100%{transform:translateX(0)}50%{transform:translateX(26px)}}
    .glass{background:linear-gradient(180deg, rgba(255,255,255,0.12), rgba(255,255,255,0.06)); border:1px solid rgba(255,255,255,0.18); border-radius:18px; box-shadow:0 10px 24px rgba(0,0,0,0.38), 0 0 0 1px rgba(255,255,255,0.06), 0 0 10px rgba(255,140,0,0.14); backdrop-filter: blur(12px);}
    .top{position:sticky; top:0; display:flex; align-items:center; justify-content:center; padding:14px 18px; margin:12px; z-index:2}
    .links{display:flex; gap:10px; flex-wrap:wrap; justify-content:center}
    .btn{display:inline-flex; align-items:center; gap:8px; padding:12px 16px; border-radius:14px; border:1px solid rgba(255,255,255,0.2); background:linear-gradient(135deg,#ff8c00,#8a2be2); color:#fff; cursor:pointer; box-shadow:0 0 10px rgba(255,140,0,0.18); text-decoration:none}
    .btn img{width:18px; height:18px}
    .wrap{max-width:1280px; margin:18px auto; display:grid; grid-template-columns:1.2fr 0.8fr; gap:16px; padding:0 12px}
    @media(max-width:1100px){ .wrap{grid-template-columns:1fr} }
    .card{padding:16px}
    h2{margin:0 0 10px; font-size:18px}
    label{display:block; color:#dfe2ff; font-size:12px; margin:8px 0 6px}
    input[type="text"], input[type="email"], input[type="number"], select, textarea{width:100%; padding:12px 14px; border-radius:12px; border:1px solid #dfe3ee; background:#fff; color:#0f121a; font-size:14px}
    textarea{min-height:80px; resize:vertical}
    .uploader{border:1px dashed rgba(255,255,255,0.28); border-radius:14px; padding:14px; text-align:center; background:rgba(0,0,0,0.18); position:relative}
    .uploader input[type=file]{position:absolute; inset:0; opacity:0; cursor:pointer}
    .uploader .hint{color:var(--muted); font-size:13px}
    .previews{margin-top:12px; display:grid; grid-template-columns:repeat(4,1fr); gap:10px}
    @media(max-width:1200px){.previews{grid-template-columns:repeat(3,1fr)}}
    @media(max-width:800px){.previews{grid-template-columns:repeat(2,1fr)}}
    .thumb{border:1px solid rgba(255,255,255,0.18); border-radius:12px; overflow:hidden; background:#0c0f18; box-shadow:0 0 0 1px rgba(255,255,255,0.06)}
    .thumb .img{width:100%; height:180px; background:#0c0f18 center/cover no-repeat}
    .right .box{padding:12px}
    .calc{margin-top:12px; display:flex; align-items:center; justify-content:space-between}
    .calc #price{font-weight:800; color:#ffd27a}
    .note{color:#cbd0e8; font-size:12px}
    .msg{margin-top:10px; font-size:13px; color:#a6f5b0}
  </style>
</head>
<body>
  <div class="bg">
    <video class="bgv" autoplay muted loop playsinline>
      <source src="https://cdn.coverr.co/videos/coverr-glass-windows-2955/1080p.mp4" type="video/mp4">
    </video>
    <div class="gradient"></div>
    <div class="orb o1"></div><div class="orb o2"></div><div class="orb o3"></div>
  </div>

  <header class="top glass">
    <div class="links">
      <a class="btn" href="https://арткопи.рф" target="_blank"><img src="https://www.google.com/s2/favicons?sz=64&domain=xn--80aqcdbn3a.xn--p1ai" alt="">АРТКОПИ.РФ</a>
      <a class="btn" href="https://t.me/+79522003990" target="_blank"><img src="https://www.google.com/s2/favicons?sz=64&domain=t.me" alt="">Telegram</a>
      <a class="btn" href="https://vk.com/artcopy.sbor" target="_blank"><img src="https://www.google.com/s2/favicons?sz=64&domain=vk.com" alt="">VK</a>
    </div>
  </header>

  <main class="wrap">
    <section class="card glass">
      <h2>1. Загрузите до 100 фото</h2>
      <div class="uploader">
        <input type="file" id="files" accept="image/*" multiple>
        <div class="hint">Перетащите картинки сюда или нажмите для выбора</div>
      </div>
      <div id="previews" class="previews"></div>
    </section>

    <section class="card glass right">
      <div class="box">
        <h2>2. Параметры печати</h2>
        <label>Размер</label>
        <select id="size"></select>
        <label>Бумага</label>
        <select id="paper"></select>
        <label>Тираж на фото</label><input type="number" id="qty" min="1" value="1">
        <label>Цветокоррекция</label>
        <select id="correction"></select>

        <div class="note" style="margin-top:10px">
          Примечание: в описании заказа укажите, допускаются ли поля или печатать без полей (возможна обрезка).
          Если заказ без дополнительной обработки, поля могут быть белые, либо часть фото может срезаться.
        </div>

        <div class="calc" style="margin-top:14px"><div>Ориентировочно: <span id="price">0</span> ₽</div><div class="note">Цена уточняется менеджером</div></div>

        <h2 style="margin-top:14px">3. Комментарий к заказу (необязательно)</h2>
        <textarea id="comment" placeholder="Например: печатать без полей / допускаются поля / обрезать по центру и т.п."></textarea>

        <h2 style="margin-top:14px">4. Контакты</h2>
        <label>Имя</label><input type="text" id="name" placeholder="Ваше имя">
        <label>Email</label><input type="email" id="email" placeholder="Email">
        <label>Телефон</label><input type="text" id="phone" placeholder="Телефон">
        <button id="btnSend" class="btn">Отправить заказ</button>
        <div id="msg" class="msg"></div>
      </div>
    </section>
  </main>

  <script>
    // Конфиг (будет перезаписан с /api/constructor_config.php при наличии)
    let CONFIG = {
      sizes:[{name:'10x15',w:10,h:15,base:100},{name:'15x21',w:15,h:21,base:140},{name:'A4',w:21,h:29.7,base:180},{name:'A3',w:29.7,h:42,base:250},{name:'30x40',w:30,h:40,base:250},{name:'50x70',w:50,h:70,base:500}],
      papers:[{name:'Матовая',delta:0},{name:'Глянец',delta:20}],
      corrections:[{name:'Нет',delta:0},{name:'Легкая',delta:15},{name:'Профессиональная',delta:50}]
    };
    fetch('/api/constructor_config.php').then(r=>r.ok?r.json():null).then(j=>{ if(j && j.sizes){ CONFIG=j; fillSelectors(); }});

    const files = document.getElementById('files');
    const previews = document.getElementById('previews');
    const priceEl = document.getElementById('price');
    const MAX_PHOTOS = 100;

    function fillSelectors(){
      const s=document.getElementById('size'), p=document.getElementById('paper'), c=document.getElementById('correction');
      s.innerHTML=''; CONFIG.sizes.forEach(x=>{ const o=document.createElement('option'); o.textContent=x.name; s.appendChild(o); });
      p.innerHTML=''; CONFIG.papers.forEach(x=>{ const o=document.createElement('option'); o.textContent=x.name; p.appendChild(o); });
      c.innerHTML=''; CONFIG.corrections.forEach(x=>{ const o=document.createElement('option'); o.textContent=x.name; c.appendChild(o); });
    }
    fillSelectors();

    function calcPrice(){
      const szName = document.getElementById('size').value;
      const paperName = document.getElementById('paper').value;
      const qty = parseInt(document.getElementById('qty').value || '1', 10);
      const corrName = document.getElementById('correction').value;
      const n = previews.querySelectorAll('.thumb').length;
      const sz = CONFIG.sizes.find(s=>s.name===szName) || CONFIG.sizes[0];
      const p  = CONFIG.papers.find(p=>p.name===paperName) || CONFIG.papers[0];
      const c  = CONFIG.corrections.find(x=>x.name===corrName) || CONFIG.corrections[0];
      const total = (sz.base + p.delta + c.delta) * qty * (n || 0);
      priceEl.textContent = total.toLocaleString('ru-RU');
    }

    function addThumb(file){
      if (!file.type.startsWith('image/')) return;
      const URLimg = URL.createObjectURL(file);
      const div = document.createElement('div');
      div.className='thumb';
      div.innerHTML = `<div class="img" style="background-image:url('${URLimg}')"></div>`;
      previews.appendChild(div);
    }

    files.addEventListener('change', ()=>{
      const listFull = [...files.files];
      const list = listFull.slice(0, MAX_PHOTOS);
      previews.innerHTML='';
      list.forEach(addThumb);
      if (listFull.length > MAX_PHOTOS) {
        alert('Выбрано ' + listFull.length + ' файлов.\nБудут отправлены только первые ' + MAX_PHOTOS + '.');
      }
      calcPrice();
    });

    ['size','paper','qty','correction'].forEach(id=>{
      const el = document.getElementById(id);
      el.addEventListener('change', calcPrice);
    });

    // HEIC/HEIF: попытка конвертации в браузере (если не получится — отправим исходник, сервер примет)
    const isHeic = f => /image\/heic|image\/heif/i.test(f.type) || /\.heic$|\.heif$/i.test(f.name);
    async function convertHeicToJpeg(file) {
      try {
        const blobURL = URL.createObjectURL(file);
        const img = document.createElement('img');
        img.decoding = 'async'; img.loading = 'eager'; img.src = blobURL;
        await new Promise((res, rej)=>{ img.onload = res; img.onerror = rej; });
        const canvas = document.createElement('canvas');
        canvas.width = img.naturalWidth; canvas.height = img.naturalHeight;
        const ctx = canvas.getContext('2d'); ctx.drawImage(img, 0, 0);
        const blob = await new Promise(res=> canvas.toBlob(res, 'image/jpeg', 0.9));
        URL.revokeObjectURL(blobURL);
        if (!blob) return file;
        const fname = (file.name || 'photo').replace(/\.(heic|heif)$/i, '') + '.jpg';
        return new File([blob], fname, {type:'image/jpeg', lastModified: Date.now()});
      } catch(e){ return file; }
    }
    async function prepareFilesForUpload(list){
      const out = [];
      for (const f of list) out.push(isHeic(f) ? await convertHeicToJpeg(f) : f);
      return out;
    }

    document.getElementById('btnSend').addEventListener('click', async ()=>{
      const all = [...files.files];
      const limited = all.slice(0, MAX_PHOTOS);
      const msg  = document.getElementById('msg');
      const btn  = document.getElementById('btnSend');
      msg.textContent='';
      msg.style.color = '#a6f5b0';
      if (!limited.length){ msg.textContent='Загрузите фото'; return; }

      btn.disabled = true;
      const oldText = btn.textContent;
      btn.textContent = 'Отправка...';

      try{
        const prepared = await prepareFilesForUpload(limited);
        const fd = new FormData();
        prepared.forEach(f=> fd.append('photos[]', f));
        fd.append('size', document.getElementById('size').value);
        fd.append('paper', document.getElementById('paper').value);
        fd.append('qty', document.getElementById('qty').value);
        fd.append('correction', document.getElementById('correction').value);
        fd.append('name', document.getElementById('name').value.trim());
        fd.append('email', document.getElementById('email').value.trim());
        fd.append('phone', document.getElementById('phone').value.trim());
        fd.append('comment', document.getElementById('comment').value.trim());

        const r = await fetch('/api/photo_order_mail.php', { method:'POST', body: fd, credentials: 'same-origin' });
        const j = await r.json().catch(()=>({ok:false,error:'bad_json'}));
        if (j.ok) {
          msg.style.color = '#a6f5b0';
          msg.textContent = 'Заказ отправлен! № '+j.order_id + (all.length > MAX_PHOTOS ? ' (отправлены первые '+MAX_PHOTOS+' фото)' : '');
        } else {
          msg.style.color = '#ffd2d2';
          msg.textContent = 'Ошибка: ' + (j.error || j.msg || 'unknown');
        }
      }catch(err){
        msg.style.color = '#ffd2d2';
        msg.textContent='Сеть/сервер: '+err;
      } finally {
        btn.disabled = false;
        btn.textContent = oldText;
      }
    });
  </script>
</body>
</html>
