<?php
/**
 * –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´ v2.1 - –ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏
 * –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ø–∏—Å–æ–∫/–ø–ª–∏—Ç–∫–∞ + —Å–≤—è–∑—å —Å —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º
 */

// –ù–∞–¥—ë–∂–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ functions.php
$baseDir = __DIR__;
$paths = [
    dirname($baseDir, 2) . '/functions.php',
    dirname($baseDir, 3) . '/functions.php', 
    rtrim($_SERVER['DOCUMENT_ROOT'] ?? '', '/') . '/functions.php',
    realpath((($_SERVER['DOCUMENT_ROOT'] ?? '') . '/../functions.php')) ?: null,
];

$loaded = false;
foreach ($paths as $p) {
    if ($p && is_readable($p)) {
        require_once $p;
        $loaded = true;
        break;
    }
}

if (!$loaded) {
    http_response_code(500);
    die('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å functions.php. –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø—É—Ç–∏: ' . implode(', ', array_filter($paths)));
}

initSession();

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
$mode = $_GET['mode'] ?? 'list'; // list, create, edit, view
$product_id = $_GET['id'] ?? null;
$view_mode = $_GET['view'] ?? $_SESSION['products_view'] ?? 'grid'; // grid –∏–ª–∏ list
$search = $_GET['search'] ?? '';
$category_filter = $_GET['category'] ?? '';
$status_filter = $_GET['status'] ?? '';

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏—é
if (isset($_GET['view'])) {
    $_SESSION['products_view'] = $view_mode;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ POST –∑–∞–ø—Ä–æ—Å–æ–≤ (AJAX)
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    header('Content-Type: application/json; charset=utf-8');

    try {
        $action = $_POST['action'] ?? '';

        switch ($action) {
            case 'save_product':
                $result = handleSaveProduct($_POST);
                echo json_encode($result);
                exit;

            case 'delete_product':
                $result = handleDeleteProduct($_POST['id'] ?? 0);
                echo json_encode($result);
                exit;

            case 'bulk_action':
                $result = handleBulkAction($_POST);
                echo json_encode($result);
                exit;

            case 'toggle_status':
                $result = handleToggleStatus($_POST['id'] ?? 0);
                echo json_encode($result);
                exit;

            case 'ai_generate':
                $result = handleAIGeneration($_POST);
                echo json_encode($result);
                exit;

            default:
                echo json_encode(['success' => false, 'message' => '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ']);
                exit;
        }
    } catch (Exception $e) {
        error_log('–û—à–∏–±–∫–∞ –≤ –º–æ–¥—É–ª–µ —Ç–æ–≤–∞—Ä–æ–≤: ' . $e->getMessage());
        echo json_encode(['success' => false, 'message' => '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞']);
        exit;
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
$products = getAllProducts();
$categories = getCategories();

// –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
if (!empty($search)) {
    $products = array_filter($products, function($product) use ($search) {
        $searchTerm = mb_strtolower($search);
        $name = mb_strtolower($product['name'] ?? '');
        $desc = mb_strtolower($product['description'] ?? '');
        $tags = mb_strtolower($product['tags'] ?? '');
        return mb_strpos($name, $searchTerm) !== false || 
               mb_strpos($desc, $searchTerm) !== false ||
               mb_strpos($tags, $searchTerm) !== false;
    });
}

if (!empty($category_filter)) {
    $products = array_filter($products, function($product) use ($category_filter) {
        return isset($product['category_id']) && $product['category_id'] == $category_filter;
    });
}

if (!empty($status_filter)) {
    $products = array_filter($products, function($product) use ($status_filter) {
        return ($product['status'] ?? 1) == $status_filter;
    });
}

// –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
$sort = $_GET['sort'] ?? 'name';
$order = $_GET['order'] ?? 'asc';

usort($products, function($a, $b) use ($sort, $order) {
    $valueA = $a[$sort] ?? '';
    $valueB = $b[$sort] ?? '';

    if ($sort === 'price' || $sort === 'stock_quantity') {
        $valueA = floatval($valueA);
        $valueB = floatval($valueB);
    }

    if ($order === 'desc') {
        return $valueB <=> $valueA;
    }
    return $valueA <=> $valueB;
});

$product = null;
if ($product_id && in_array($mode, ['edit', 'view'])) {
    $product = getProductById($product_id);
    if (!$product && $mode === 'edit') {
        $mode = 'list';
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
function handleSaveProduct($data) {
    $productData = [
        'id' => $data['product_id'] ?? null,
        'name' => trim($data['name'] ?? ''),
        'latin_name' => trim($data['latin_name'] ?? ''),
        'description' => trim($data['description'] ?? ''),
        'short_description' => trim($data['short_description'] ?? ''),
        'price' => floatval($data['price'] ?? 0),
        'old_price' => floatval($data['old_price'] ?? 0),
        'category_id' => intval($data['category_id'] ?? 0),
        'sku' => trim($data['sku'] ?? ''),
        'stock_quantity' => intval($data['stock_quantity'] ?? 0),
        'status' => intval($data['status'] ?? 1),
        'main_image' => $data['main_image'] ?? '',
        'gallery' => json_decode($data['gallery'] ?? '[]', true),
        'badges' => json_decode($data['badges'] ?? '[]', true),
        'tags' => trim($data['tags'] ?? ''),
        'size' => trim($data['size'] ?? ''),
        'temperature' => trim($data['temperature'] ?? ''),
        'ph_level' => trim($data['ph_level'] ?? ''),
        'lighting' => trim($data['lighting'] ?? ''),
        'difficulty' => trim($data['difficulty'] ?? ''),
        'meta_title' => trim($data['meta_title'] ?? ''),
        'meta_description' => trim($data['meta_description'] ?? '')
    ];

    if (function_exists('saveProduct')) {
        return saveProduct($productData);
    }

    return ['success' => true, 'product_id' => $productData['id'] ?? rand(1000, 9999), 'message' => '–¢–æ–≤–∞—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω'];
}

function handleDeleteProduct($id) {
    if (function_exists('deleteProduct')) {
        $result = deleteProduct($id);
        return ['success' => $result, 'message' => $result ? '–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω' : '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è'];
    }
    return ['success' => true, 'message' => '–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω'];
}

function handleToggleStatus($id) {
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ç–æ–≤–∞—Ä–∞
    return ['success' => true, 'message' => '–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω'];
}

function handleBulkAction($data) {
    $action = $data['bulk_action'] ?? '';
    $ids = $data['selected_products'] ?? [];

    if (empty($ids)) {
        return ['success' => false, 'message' => '–ù–µ –≤—ã–±—Ä–∞–Ω—ã —Ç–æ–≤–∞—Ä—ã'];
    }

    $processed = 0;
    foreach ($ids as $id) {
        switch ($action) {
            case 'delete':
                if (handleDeleteProduct($id)['success']) $processed++;
                break;
            case 'activate':
            case 'deactivate':
                if (handleToggleStatus($id)['success']) $processed++;
                break;
        }
    }

    return ['success' => true, 'message' => "–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: $processed –∏–∑ " . count($ids)];
}

function handleAIGeneration($data) {
    $type = $data['ai_type'] ?? '';
    $context = $data['context'] ?? '';

    $responses = [
        'description' => '–í—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —Å –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.',
        'tags' => '–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π, –ø–æ–ø—É–ª—è—Ä–Ω—ã–π, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π, –Ω–æ–≤–∏–Ω–∫–∞',
        'seo_title' => '–ö—É–ø–∏—Ç—å ' . ($context ?: '—Ç–æ–≤–∞—Ä') . ' - –ª—É—á—à–∏–µ —Ü–µ–Ω—ã –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–µ',
        'seo_description' => '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏'
    ];

    return [
        'success' => true,
        'content' => $responses[$type] ?? '–ò–ò –∫–æ–Ω—Ç–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω',
        'message' => '–ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞'
    ];
}

?>
<!DOCTYPE html>
<html lang='ru'>
<head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title>üì¶ –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´ v2.1 - <?= ucfirst($mode) ?></title>

    <!-- Bootstrap 5 -->
    <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css' rel='stylesheet'>
    <!-- Font Awesome -->
    <link href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css' rel='stylesheet'>
    <!-- Google Fonts -->
    <link href='https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap' rel='stylesheet'>

    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --success-gradient: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            --danger-gradient: linear-gradient(135deg, #ff416c 0%, #ff4b2b 100%);
            --warning-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --info-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            --dark-gradient: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
        }

        * { font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif; }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
        }

        .mega-header {
            background: var(--primary-gradient);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .mega-header::before {
            content: '';
            position: absolute;
            top: -50%; left: -50%;
            width: 200%; height: 200%;
            background: repeating-linear-gradient(45deg, transparent, transparent 2px, rgba(255,255,255,0.05) 2px, rgba(255,255,255,0.05) 4px);
            animation: float 20s linear infinite;
        }

        @keyframes float {
            0% { transform: translateX(-100px) translateY(-100px); }
            100% { transform: translateX(100px) translateY(100px); }
        }

        .mega-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            overflow: hidden;
        }

        .mega-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        }

        .control-panel {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        }

        .stats-panel {
            background: var(--dark-gradient);
            color: white;
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .stat-item {
            text-align: center;
            padding: 1rem;
            border-radius: 12px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .stat-item:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-3px);
        }

        .view-toggle {
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 0.25rem;
            display: inline-flex;
        }

        .view-toggle .btn {
            border: none;
            border-radius: 8px;
            padding: 0.5rem 1rem;
            margin: 0;
            background: transparent;
            color: #6c757d;
            transition: all 0.3s ease;
        }

        .view-toggle .btn.active {
            background: var(--primary-gradient);
            color: white;
            transform: translateY(-1px);
            box-shadow: 0 3px 10px rgba(102, 126, 234, 0.3);
        }

        .product-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-top: 1.5rem;
        }

        .product-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .product-card {
            background: white;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            border: 2px solid transparent;
        }

        .product-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
            border-color: var(--primary-gradient);
        }

        .product-card.selected {
            border-color: #28a745;
            box-shadow: 0 0 20px rgba(40, 167, 69, 0.3);
        }

        .product-image {
            height: 200px;
            background: linear-gradient(45deg, #f8f9fa, #e9ecef);
            position: relative;
            overflow: hidden;
        }

        .product-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: all 0.3s ease;
        }

        .product-card:hover .product-image img {
            transform: scale(1.1);
        }

        .product-list-item {
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }

        .product-list-item:hover {
            transform: translateX(5px);
            border-color: var(--primary-gradient);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .product-list-item.selected {
            border-color: #28a745;
            box-shadow: 0 0 20px rgba(40, 167, 69, 0.3);
        }

        .quick-actions {
            position: absolute;
            top: 10px;
            right: 10px;
            opacity: 0;
            transition: all 0.3s ease;
        }

        .product-card:hover .quick-actions,
        .product-list-item:hover .quick-actions {
            opacity: 1;
        }

        .bulk-actions {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
            border-radius: 12px;
            padding: 1rem;
            margin-bottom: 1rem;
            display: none;
            animation: slideDown 0.3s ease-out;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .filter-chip {
            background: var(--primary-gradient);
            color: white;
            border-radius: 20px;
            padding: 0.25rem 0.75rem;
            font-size: 0.8rem;
            margin: 0.25rem;
            display: inline-block;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .filter-chip:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .search-box {
            border: 2px solid #e9ecef;
            border-radius: 25px;
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .search-box:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.25rem rgba(102, 126, 234, 0.25);
        }

        .floating-fab {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            z-index: 1000;
        }

        .fab-btn {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            border: none;
            margin: 0.5rem;
            font-size: 1.5rem;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .fab-btn:hover {
            transform: translateY(-5px) scale(1.1);
            box-shadow: 0 12px 30px rgba(0, 0, 0, 0.4);
        }

        .loading-overlay {
            position: fixed;
            top: 0; left: 0; right: 0; bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            backdrop-filter: blur(5px);
        }

        .spinner-custom {
            width: 60px; height: 60px;
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-top: 4px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .notification {
            position: fixed;
            top: 2rem; right: 2rem;
            z-index: 9999;
            min-width: 350px;
            border-radius: 12px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
            animation: slideInRight 0.3s ease-out;
        }

        @keyframes slideInRight {
            from { opacity: 0; transform: translateX(100%); }
            to { opacity: 1; transform: translateX(0); }
        }

        /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
        @media (max-width: 768px) {
            .mega-header { padding: 1rem 0; }
            .product-grid { grid-template-columns: 1fr; }
            .control-panel { padding: 1rem; }
            .floating-fab { bottom: 1rem; right: 1rem; }
            .notification { right: 1rem; min-width: 300px; }
            .view-toggle { width: 100%; justify-content: center; }
        }

        /* –ê–Ω–∏–º–∞—Ü–∏–∏ */
        .animate-fade-in {
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>
    <!-- –ú–µ–≥–∞ —Ö–µ–¥–µ—Ä -->
    <div class='mega-header'>
        <div class='container'>
            <div class='row align-items-center' style='position: relative; z-index: 1;'>
                <div class='col-md-8'>
                    <h1 class='mb-2'>
                        <i class='fas fa-cube me-3'></i>
                        üì¶ –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´ v2.1
                    </h1>
                    <p class='mb-0 opacity-75'>
                        –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤ —Å –ò–ò
                    </p>
                </div>
                <div class='col-md-4 text-end'>
                    <div class='d-flex align-items-center justify-content-end'>
                        <div class='me-3'>
                            <small class='opacity-75'>–¢–æ–≤–∞—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ</small><br>
                            <span class='badge bg-light text-dark fs-5'>
                                <i class='fas fa-box me-1'></i><?= count($products) ?>
                            </span>
                        </div>
                        <div class='text-end'>
                            <small class='opacity-75'>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</small><br>
                            <span class='badge bg-success'>
                                <i class='fas fa-circle me-1'></i>–û–Ω–ª–∞–π–Ω
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class='container'>
        <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–Ω–µ–ª—å -->
        <div class='stats-panel animate-fade-in'>
            <div class='row'>
                <div class='col-md-3'>
                    <div class='stat-item'>
                        <div style='font-size: 2.5rem; margin-bottom: 0.5rem;'>üì¶</div>
                        <h3><?= count($products) ?></h3>
                        <small>–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤</small>
                    </div>
                </div>
                <div class='col-md-3'>
                    <div class='stat-item'>
                        <div style='font-size: 2.5rem; margin-bottom: 0.5rem;'>‚úÖ</div>
                        <h3><?= count(array_filter($products, fn($p) => ($p['status'] ?? 1) == 1)) ?></h3>
                        <small>–ê–∫—Ç–∏–≤–Ω—ã—Ö</small>
                    </div>
                </div>
                <div class='col-md-3'>
                    <div class='stat-item'>
                        <div style='font-size: 2.5rem; margin-bottom: 0.5rem;'>üìÇ</div>
                        <h3><?= count($categories) ?></h3>
                        <small>–ö–∞—Ç–µ–≥–æ—Ä–∏–π</small>
                    </div>
                </div>
                <div class='col-md-3'>
                    <div class='stat-item'>
                        <div style='font-size: 2.5rem; margin-bottom: 0.5rem;'>üí∞</div>
                        <h3><?= formatPrice(array_sum(array_column($products, 'price'))) ?></h3>
                        <small>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</small>
                    </div>
                </div>
            </div>
        </div>

        <!-- –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è -->
        <div class='control-panel animate-fade-in'>
            <div class='row align-items-center g-3'>
                <!-- –ü–æ–∏—Å–∫ -->
                <div class='col-md-4'>
                    <div class='position-relative'>
                        <input type='text' class='form-control search-box' placeholder='üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤...' 
                               id='searchInput' value='<?= htmlspecialchars($search) ?>'>
                        <i class='fas fa-search position-absolute' 
                           style='right: 1rem; top: 50%; transform: translateY(-50%); color: #6c757d;'></i>
                    </div>
                </div>

                <!-- –§–∏–ª—å—Ç—Ä—ã -->
                <div class='col-md-6'>
                    <div class='row g-2'>
                        <div class='col-6'>
                            <select class='form-select' id='categoryFilter'>
                                <option value=''>üìÇ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                                <?php foreach ($categories as $cat): ?>
                                <option value='<?= $cat['id'] ?>' <?= $category_filter == $cat['id'] ? 'selected' : '' ?>>
                                    <?= htmlspecialchars($cat['name']) ?>
                                </option>
                                <?php endforeach; ?>
                            </select>
                        </div>
                        <div class='col-6'>
                            <select class='form-select' id='statusFilter'>
                                <option value=''>üö¶ –í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                                <option value='1' <?= $status_filter === '1' ? 'selected' : '' ?>>‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ</option>
                                <option value='0' <?= $status_filter === '0' ? 'selected' : '' ?>>‚ùå –°–∫—Ä—ã—Ç—ã–µ</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–∏–¥–∞ -->
                <div class='col-md-2 text-end'>
                    <div class='view-toggle'>
                        <button class='btn <?= $view_mode === 'grid' ? 'active' : '' ?>' 
                                onclick='switchView("grid")' title='–ü–ª–∏—Ç–∫–∞'>
                            <i class='fas fa-th'></i>
                        </button>
                        <button class='btn <?= $view_mode === 'list' ? 'active' : '' ?>' 
                                onclick='switchView("list")' title='–°–ø–∏—Å–æ–∫'>
                            <i class='fas fa-list'></i>
                        </button>
                    </div>
                </div>
            </div>

            <!-- –ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã -->
            <?php if ($search || $category_filter || $status_filter): ?>
            <div class='mt-3'>
                <small class='text-muted'>–ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:</small><br>
                <?php if ($search): ?>
                    <span class='filter-chip' onclick='clearFilter("search")'>
                        üîç "<?= htmlspecialchars($search) ?>" <i class='fas fa-times ms-1'></i>
                    </span>
                <?php endif; ?>
                <?php if ($category_filter): ?>
                    <?php
                    $cat_name = '';
                    foreach ($categories as $cat) {
                        if ($cat['id'] == $category_filter) {
                            $cat_name = $cat['name'];
                            break;
                        }
                    }
                    ?>
                    <span class='filter-chip' onclick='clearFilter("category")'>
                        üìÇ <?= htmlspecialchars($cat_name) ?> <i class='fas fa-times ms-1'></i>
                    </span>
                <?php endif; ?>
                <?php if ($status_filter): ?>
                    <span class='filter-chip' onclick='clearFilter("status")'>
                        üö¶ <?= $status_filter === '1' ? '–ê–∫—Ç–∏–≤–Ω—ã–µ' : '–°–∫—Ä—ã—Ç—ã–µ' ?> <i class='fas fa-times ms-1'></i>
                    </span>
                <?php endif; ?>
                <button class='btn btn-sm btn-outline-secondary ms-2' onclick='clearAllFilters()'>
                    <i class='fas fa-times me-1'></i>–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
                </button>
            </div>
            <?php endif; ?>
        </div>

        <!-- –ü–∞–Ω–µ–ª—å –º–∞—Å—Å–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π -->
        <div class='bulk-actions' id='bulkActions'>
            <div class='d-flex justify-content-between align-items-center'>
                <div>
                    <strong>–í—ã–±—Ä–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <span id='selectedCount'>0</span></strong>
                </div>
                <div>
                    <button class='btn btn-outline-light btn-sm me-2' onclick='bulkAction("activate")'>
                        <i class='fas fa-eye me-1'></i>–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    <button class='btn btn-outline-light btn-sm me-2' onclick='bulkAction("deactivate")'>
                        <i class='fas fa-eye-slash me-1'></i>–°–∫—Ä—ã—Ç—å
                    </button>
                    <button class='btn btn-outline-light btn-sm me-2' onclick='bulkAction("export")'>
                        <i class='fas fa-download me-1'></i>–≠–∫—Å–ø–æ—Ä—Ç
                    </button>
                    <button class='btn btn-danger btn-sm' onclick='bulkAction("delete")'>
                        <i class='fas fa-trash me-1'></i>–£–¥–∞–ª–∏—Ç—å
                    </button>
                </div>
            </div>
        </div>

        <!-- –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ -->
        <div class='mega-card animate-fade-in'>
            <div class='card-header bg-transparent border-0 p-4'>
                <div class='d-flex justify-content-between align-items-center'>
                    <h5 class='mb-0'>
                        <?php if ($view_mode === 'grid'): ?>
                            <i class='fas fa-th me-2 text-primary'></i>üìã –¢–æ–≤–∞—Ä—ã –≤ –≤–∏–¥–µ –ø–ª–∏—Ç–∫–∏
                        <?php else: ?>
                            <i class='fas fa-list me-2 text-primary'></i>üìã –¢–æ–≤–∞—Ä—ã –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞
                        <?php endif; ?>
                        <span class='badge bg-primary ms-2'><?= count($products) ?></span>
                    </h5>
                    <div>
                        <div class='dropdown d-inline-block me-2'>
                            <button class='btn btn-outline-primary btn-sm dropdown-toggle' type='button' data-bs-toggle='dropdown'>
                                <i class='fas fa-sort me-1'></i>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
                            </button>
                            <div class='dropdown-menu'>
                                <a class='dropdown-item' href='#' onclick='sortProducts("name", "asc")'>
                                    <i class='fas fa-sort-alpha-down me-2'></i>–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é (–ê-–Ø)
                                </a>
                                <a class='dropdown-item' href='#' onclick='sortProducts("name", "desc")'>
                                    <i class='fas fa-sort-alpha-up me-2'></i>–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é (–Ø-–ê)
                                </a>
                                <a class='dropdown-item' href='#' onclick='sortProducts("price", "asc")'>
                                    <i class='fas fa-sort-numeric-down me-2'></i>–ü–æ —Ü–µ–Ω–µ (–≤–æ–∑—Ä.)
                                </a>
                                <a class='dropdown-item' href='#' onclick='sortProducts("price", "desc")'>
                                    <i class='fas fa-sort-numeric-up me-2'></i>–ü–æ —Ü–µ–Ω–µ (—É–±—ã–≤.)
                                </a>
                                <a class='dropdown-item' href='#' onclick='sortProducts("stock_quantity", "desc")'>
                                    <i class='fas fa-warehouse me-2'></i>–ü–æ –Ω–∞–ª–∏—á–∏—é
                                </a>
                            </div>
                        </div>
                        <button class='btn btn-outline-success btn-sm' onclick='selectAllProducts()'>
                            <i class='fas fa-check-square me-1'></i>–í—ã–±—Ä–∞—Ç—å –≤—Å–µ
                        </button>
                    </div>
                </div>
            </div>
            <div class='card-body p-4'>
                <?php if (empty($products)): ?>
                    <!-- –ü—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç -->
                    <div class='text-center py-5'>
                        <i class='fas fa-search fa-4x text-muted mb-4'></i>
                        <h4 class='text-muted'>–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h4>
                        <p class='text-muted mb-4'>
                            <?php if ($search || $category_filter || $status_filter): ?>
                                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏—è –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã
                            <?php else: ?>
                                –í –∫–∞—Ç–∞–ª–æ–≥–µ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤
                            <?php endif; ?>
                        </p>
                        <?php if (!($search || $category_filter || $status_filter)): ?>
                        <a href='?page=add_product' class='btn btn-success btn-lg'>
                            <i class='fas fa-plus me-2'></i>‚ûï –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä
                        </a>
                        <?php else: ?>
                        <button class='btn btn-primary' onclick='clearAllFilters()'>
                            <i class='fas fa-times me-2'></i>–û—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                        </button>
                        <?php endif; ?>
                    </div>
                <?php else: ?>
                    <!-- –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï –¢–û–í–ê–†–û–í -->
                    <div id='productsContainer'>
                        <?php if ($view_mode === 'grid'): ?>
                        <!-- –ü–õ–ò–¢–ö–ê -->
                        <div class='product-grid'>
                            <?php foreach ($products as $product): ?>
                            <div class='product-card' data-id='<?= $product['id'] ?>'>
                                <!-- –ß–µ–∫–±–æ–∫—Å –≤—ã–±–æ—Ä–∞ -->
                                <div class='position-absolute top-0 start-0 p-2' style='z-index: 10;'>
                                    <input type='checkbox' class='form-check-input product-checkbox' 
                                           value='<?= $product['id'] ?>' onchange='updateBulkActions()'>
                                </div>

                                <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è -->
                                <div class='quick-actions'>
                                    <div class='btn-group-vertical'>
                                        <button class='btn btn-sm btn-light' onclick='viewProduct("<?= $product['id'] ?>")' 
                                                title='–ü—Ä–æ—Å–º–æ—Ç—Ä'>
                                            <i class='fas fa-eye'></i>
                                        </button>
                                        <button class='btn btn-sm btn-primary' onclick='editProduct("<?= $product['id'] ?>")' 
                                                title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'>
                                            <i class='fas fa-edit'></i>
                                        </button>
                                        <button class='btn btn-sm btn-warning' onclick='toggleStatus("<?= $product['id'] ?>")' 
                                                title='–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å'>
                                            <i class='fas fa-<?= ($product['status'] ?? 1) == 1 ? 'eye-slash' : 'eye' ?>'></i>
                                        </button>
                                        <button class='btn btn-sm btn-danger' onclick='deleteProduct("<?= $product['id'] ?>")' 
                                                title='–£–¥–∞–ª–∏—Ç—å'>
                                            <i class='fas fa-trash'></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ -->
                                <div class='product-image'>
                                    <?php if (!empty($product['main_image'])): ?>
                                    <img src='<?= htmlspecialchars($product['main_image']) ?>' 
                                         alt='<?= htmlspecialchars($product['name']) ?>'>
                                    <?php else: ?>
                                    <div class='d-flex align-items-center justify-content-center h-100'>
                                        <i class='fas fa-image fa-3x text-muted'></i>
                                    </div>
                                    <?php endif; ?>

                                    <!-- –°—Ç–∞—Ç—É—Å —Ç–æ–≤–∞—Ä–∞ -->
                                    <div class='position-absolute bottom-0 start-0 p-2'>
                                        <?php if (($product['status'] ?? 1) == 1): ?>
                                        <span class='badge bg-success'>‚úÖ –ê–∫—Ç–∏–≤–µ–Ω</span>
                                        <?php else: ?>
                                        <span class='badge bg-danger'>‚ùå –°–∫—Ä—ã—Ç</span>
                                        <?php endif; ?>
                                    </div>

                                    <!-- –û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å–∫–ª–∞–¥–µ -->
                                    <div class='position-absolute bottom-0 end-0 p-2'>
                                        <?php
                                        $stock = $product['stock_quantity'] ?? 0;
                                        if ($stock > 10): ?>
                                            <span class='badge bg-success'>üì¶ <?= $stock ?></span>
                                        <?php elseif ($stock > 0): ?>
                                            <span class='badge bg-warning'>‚ö†Ô∏è <?= $stock ?></span>
                                        <?php else: ?>
                                            <span class='badge bg-danger'>‚ùå 0</span>
                                        <?php endif; ?>
                                    </div>
                                </div>

                                <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ -->
                                <div class='p-3'>
                                    <h6 class='fw-bold mb-2' title='<?= htmlspecialchars($product['name']) ?>'>
                                        <?= htmlspecialchars(mb_substr($product['name'], 0, 50)) ?><?= mb_strlen($product['name']) > 50 ? '...' : '' ?>
                                    </h6>

                                    <?php if (!empty($product['latin_name'])): ?>
                                    <p class='small text-muted fst-italic mb-2'>
                                        üî¨ <?= htmlspecialchars($product['latin_name']) ?>
                                    </p>
                                    <?php endif; ?>

                                    <p class='small text-muted mb-3'>
                                        <?= htmlspecialchars(mb_substr($product['description'] ?? '', 0, 100)) ?>...
                                    </p>

                                    <!-- –¶–µ–Ω–∞ -->
                                    <div class='d-flex justify-content-between align-items-center mb-2'>
                                        <div>
                                            <span class='fw-bold text-success fs-5'><?= formatPrice($product['price'] ?? 0) ?></span>
                                            <?php if (!empty($product['old_price']) && $product['old_price'] > $product['price']): ?>
                                            <br><small class='text-muted text-decoration-line-through'>
                                                <?= formatPrice($product['old_price']) ?>
                                            </small>
                                            <span class='badge bg-danger ms-1'>
                                                -<?= round((($product['old_price'] - $product['price']) / $product['old_price']) * 100) ?>%
                                            </span>
                                            <?php endif; ?>
                                        </div>
                                    </div>

                                    <!-- –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏ SKU -->
                                    <div class='d-flex justify-content-between align-items-center mb-2'>
                                        <small class='text-muted'>
                                            üìÇ <?php
                                            $cat = array_filter($categories, fn($c) => $c['id'] == ($product['category_id'] ?? 0));
                                            echo $cat ? htmlspecialchars(array_values($cat)[0]['name']) : '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
                                            ?>
                                        </small>
                                        <?php if (!empty($product['sku'])): ?>
                                        <small class='text-muted'>
                                            <code><?= htmlspecialchars($product['sku']) ?></code>
                                        </small>
                                        <?php endif; ?>
                                    </div>

                                    <!-- –Ø—Ä–ª—ã–∫–∏ —Ç–æ–≤–∞—Ä–∞ -->
                                    <?php if (!empty($product['badges']) && is_array($product['badges'])): ?>
                                    <div class='mb-2'>
                                        <?php foreach (array_slice($product['badges'], 0, 3) as $badge): ?>
                                        <?php
                                        $badgeColors = ['new' => 'success', 'hit' => 'danger', 'recommend' => 'warning', 'discount' => 'info', 'premium' => 'dark', 'eco' => 'success'];
                                        $badgeTexts = ['new' => 'üÜï', 'hit' => 'üî•', 'recommend' => '‚≠ê', 'discount' => 'üí∏', 'premium' => 'üíé', 'eco' => 'üåø'];
                                        $color = $badgeColors[$badge] ?? 'secondary';
                                        $text = $badgeTexts[$badge] ?? 'üè∑Ô∏è';
                                        ?>
                                        <span class='badge bg-<?= $color ?> me-1'><?= $text ?></span>
                                        <?php endforeach; ?>
                                    </div>
                                    <?php endif; ?>
                                </div>
                            </div>
                            <?php endforeach; ?>
                        </div>

                        <?php else: ?>
                        <!-- –°–ü–ò–°–û–ö -->
                        <div class='product-list'>
                            <?php foreach ($products as $product): ?>
                            <div class='product-list-item p-3' data-id='<?= $product['id'] ?>'>
                                <div class='row align-items-center'>
                                    <!-- –ß–µ–∫–±–æ–∫—Å –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ -->
                                    <div class='col-md-2'>
                                        <div class='d-flex align-items-center'>
                                            <input type='checkbox' class='form-check-input me-3 product-checkbox' 
                                                   value='<?= $product['id'] ?>' onchange='updateBulkActions()'>
                                            <div class='flex-shrink-0'>
                                                <?php if (!empty($product['main_image'])): ?>
                                                <img src='<?= htmlspecialchars($product['main_image']) ?>' 
                                                     alt='<?= htmlspecialchars($product['name']) ?>' 
                                                     class='img-fluid rounded' style='width: 80px; height: 80px; object-fit: cover;'>
                                                <?php else: ?>
                                                <div class='d-flex align-items-center justify-content-center rounded border' 
                                                     style='width: 80px; height: 80px; background: #f8f9fa;'>
                                                    <i class='fas fa-image fa-2x text-muted'></i>
                                                </div>
                                                <?php endif; ?>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                                    <div class='col-md-5'>
                                        <h6 class='fw-bold mb-1'><?= htmlspecialchars($product['name']) ?></h6>
                                        <?php if (!empty($product['latin_name'])): ?>
                                        <p class='small text-muted fst-italic mb-1'>
                                            üî¨ <?= htmlspecialchars($product['latin_name']) ?>
                                        </p>
                                        <?php endif; ?>
                                        <p class='small text-muted mb-1'>
                                            <?= htmlspecialchars(mb_substr($product['description'] ?? '', 0, 150)) ?>...
                                        </p>

                                        <!-- –Ø—Ä–ª—ã–∫–∏ -->
                                        <?php if (!empty($product['badges']) && is_array($product['badges'])): ?>
                                        <div>
                                            <?php foreach (array_slice($product['badges'], 0, 4) as $badge): ?>
                                            <?php
                                            $badgeColors = ['new' => 'success', 'hit' => 'danger', 'recommend' => 'warning', 'discount' => 'info', 'premium' => 'dark', 'eco' => 'success'];
                                            $badgeTexts = ['new' => 'üÜï –ù–æ–≤–∏–Ω–∫–∞', 'hit' => 'üî• –•–∏—Ç', 'recommend' => '‚≠ê –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º', 'discount' => 'üí∏ –°–∫–∏–¥–∫–∞', 'premium' => 'üíé –ü—Ä–µ–º–∏—É–º', 'eco' => 'üåø –≠–∫–æ'];
                                            $color = $badgeColors[$badge] ?? 'secondary';
                                            $text = $badgeTexts[$badge] ?? $badge;
                                            ?>
                                            <span class='badge bg-<?= $color ?> me-1 mb-1'><?= $text ?></span>
                                            <?php endforeach; ?>
                                        </div>
                                        <?php endif; ?>
                                    </div>

                                    <!-- –¶–µ–Ω–∞ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è -->
                                    <div class='col-md-2'>
                                        <div class='text-center'>
                                            <div class='fw-bold text-success fs-5 mb-1'>
                                                <?= formatPrice($product['price'] ?? 0) ?>
                                            </div>
                                            <?php if (!empty($product['old_price']) && $product['old_price'] > $product['price']): ?>
                                            <div class='small text-muted text-decoration-line-through mb-1'>
                                                <?= formatPrice($product['old_price']) ?>
                                            </div>
                                            <span class='badge bg-danger'>
                                                -<?= round((($product['old_price'] - $product['price']) / $product['old_price']) * 100) ?>%
                                            </span>
                                            <?php endif; ?>
                                        </div>

                                        <div class='text-center mt-2'>
                                            <small class='text-muted d-block'>
                                                üìÇ <?php
                                                $cat = array_filter($categories, fn($c) => $c['id'] == ($product['category_id'] ?? 0));
                                                echo $cat ? htmlspecialchars(array_values($cat)[0]['name']) : '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
                                                ?>
                                            </small>
                                            <?php if (!empty($product['sku'])): ?>
                                            <small class='text-muted'>
                                                <code><?= htmlspecialchars($product['sku']) ?></code>
                                            </small>
                                            <?php endif; ?>
                                        </div>
                                    </div>

                                    <!-- –°—Ç–∞—Ç—É—Å –∏ –æ—Å—Ç–∞—Ç–æ–∫ -->
                                    <div class='col-md-1 text-center'>
                                        <div class='mb-2'>
                                            <?php if (($product['status'] ?? 1) == 1): ?>
                                            <span class='badge bg-success'>‚úÖ –ê–∫—Ç–∏–≤–µ–Ω</span>
                                            <?php else: ?>
                                            <span class='badge bg-danger'>‚ùå –°–∫—Ä—ã—Ç</span>
                                            <?php endif; ?>
                                        </div>

                                        <div>
                                            <?php
                                            $stock = $product['stock_quantity'] ?? 0;
                                            if ($stock > 10): ?>
                                                <span class='badge bg-success'>üì¶ <?= $stock ?></span>
                                            <?php elseif ($stock > 0): ?>
                                                <span class='badge bg-warning'>‚ö†Ô∏è <?= $stock ?></span>
                                            <?php else: ?>
                                                <span class='badge bg-danger'>‚ùå –ù–µ—Ç</span>
                                            <?php endif; ?>
                                        </div>
                                    </div>

                                    <!-- –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è -->
                                    <div class='col-md-2 text-end'>
                                        <div class='quick-actions position-relative'>
                                            <div class='btn-group'>
                                                <button class='btn btn-sm btn-outline-primary' 
                                                        onclick='viewProduct("<?= $product['id'] ?>")' title='–ü—Ä–æ—Å–º–æ—Ç—Ä'>
                                                    <i class='fas fa-eye'></i>
                                                </button>
                                                <button class='btn btn-sm btn-primary' 
                                                        onclick='editProduct("<?= $product['id'] ?>")' title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'>
                                                    <i class='fas fa-edit'></i>
                                                </button>
                                                <button class='btn btn-sm btn-outline-warning' 
                                                        onclick='toggleStatus("<?= $product['id'] ?>")' title='–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å'>
                                                    <i class='fas fa-<?= ($product['status'] ?? 1) == 1 ? 'eye-slash' : 'eye' ?>'></i>
                                                </button>
                                                <button class='btn btn-sm btn-outline-danger' 
                                                        onclick='deleteProduct("<?= $product['id'] ?>")' title='–£–¥–∞–ª–∏—Ç—å'>
                                                    <i class='fas fa-trash'></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <?php endforeach; ?>
                        </div>
                        <?php endif; ?>
                    </div>
                <?php endif; ?>
            </div>
        </div>
    </div>

    <!-- –ü–ª–∞–≤–∞—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
    <div class='floating-fab'>
        <button class='fab-btn btn btn-primary' onclick='scrollToTop()' title='–ù–∞–≤–µ—Ä—Ö'>
            <i class='fas fa-arrow-up'></i>
        </button>
        <a href='?page=add_product' class='fab-btn btn btn-success' title='–°–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä'>
            <i class='fas fa-plus'></i>
        </a>
        <button class='fab-btn btn btn-info' onclick='showHelp()' title='–ü–æ–º–æ—â—å'>
            <i class='fas fa-question'></i>
        </button>
    </div>

    <!-- Bootstrap JS -->
    <script src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js'></script>

    <script>
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    let selectedProducts = new Set();
    let currentViewMode = '<?= $view_mode ?>';

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    document.addEventListener('DOMContentLoaded', function() {
        console.log('üì¶ –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´ v2.1 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        console.log('üëÅÔ∏è –†–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', currentViewMode);
        console.log('üîç –¢–æ–≤–∞—Ä–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', <?= count($products) ?>);

        initializeInterface();
        setupEventListeners();
        updateBulkActions();
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    function initializeInterface() {
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const elements = document.querySelectorAll('.animate-fade-in');
        elements.forEach((el, index) => {
            el.style.animationDelay = `${index * 0.1}s`;
        });

        console.log('‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    function setupEventListeners() {
        // –ü–æ–∏—Å–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        const searchInput = document.getElementById('searchInput');
        if (searchInput) {
            let searchTimeout;
            searchInput.addEventListener('input', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(() => {
                    applyFilters();
                }, 500);
            });
        }

        // –§–∏–ª—å—Ç—Ä—ã
        document.getElementById('categoryFilter')?.addEventListener('change', applyFilters);
        document.getElementById('statusFilter')?.addEventListener('change', applyFilters);

        // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey || e.metaKey) {
                switch(e.key) {
                    case 'f':
                        e.preventDefault();
                        document.getElementById('searchInput')?.focus();
                        break;
                    case 'a':
                        e.preventDefault();
                        selectAllProducts();
                        break;
                    case 'n':
                        e.preventDefault();
                        window.location.href = '?page=add_product';
                        break;
                }
            }

            // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∞ (V)
            if (e.key === 'v' && !e.ctrlKey && !e.metaKey) {
                e.preventDefault();
                switchView(currentViewMode === 'grid' ? 'list' : 'grid');
            }
        });

        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    }

    // === –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –í–ò–î–û–ú ===

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    function switchView(mode) {
        if (mode === currentViewMode) return;

        showLoading('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∞...');

        // –û–±–Ω–æ–≤–ª—è–µ–º URL —Å –Ω–æ–≤—ã–º —Ä–µ–∂–∏–º–æ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        const url = new URL(window.location);
        url.searchParams.set('view', mode);

        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω–æ–≤—ã–º –≤–∏–¥–æ–º
        window.location.href = url.toString();
    }

    // === –§–£–ù–ö–¶–ò–ò –§–ò–õ–¨–¢–†–ê–¶–ò–ò ===

    // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    function applyFilters() {
        const search = document.getElementById('searchInput')?.value || '';
        const category = document.getElementById('categoryFilter')?.value || '';
        const status = document.getElementById('statusFilter')?.value || '';

        const url = new URL(window.location);
        url.searchParams.set('mode', 'list');
        url.searchParams.set('view', currentViewMode);

        if (search) {
            url.searchParams.set('search', search);
        } else {
            url.searchParams.delete('search');
        }

        if (category) {
            url.searchParams.set('category', category);
        } else {
            url.searchParams.delete('category');
        }

        if (status) {
            url.searchParams.set('status', status);
        } else {
            url.searchParams.delete('status');
        }

        window.location.href = url.toString();
    }

    // –û—á–∏—Å—Ç–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
    function clearFilter(type) {
        const url = new URL(window.location);

        switch(type) {
            case 'search':
                url.searchParams.delete('search');
                break;
            case 'category':
                url.searchParams.delete('category');
                break;
            case 'status':
                url.searchParams.delete('status');
                break;
        }

        window.location.href = url.toString();
    }

    // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
    function clearAllFilters() {
        const url = new URL(window.location);
        url.searchParams.delete('search');
        url.searchParams.delete('category');
        url.searchParams.delete('status');
        url.searchParams.delete('sort');
        url.searchParams.delete('order');
        window.location.href = url.toString();
    }

    // === –§–£–ù–ö–¶–ò–ò –°–û–†–¢–ò–†–û–í–ö–ò ===

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
    function sortProducts(field, order) {
        const url = new URL(window.location);
        url.searchParams.set('sort', field);
        url.searchParams.set('order', order);
        window.location.href = url.toString();
    }

    // === –§–£–ù–ö–¶–ò–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø –¢–û–í–ê–†–ê–ú–ò ===

    // –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–∞
    function viewProduct(id) {
        window.location.href = `?mode=view&id=${id}`;
    }

    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ - –°–í–Ø–ó–¨ –° –†–ï–î–ê–ö–¢–û–†–û–ú
    function editProduct(id) {
        window.location.href = `?page=product_editor&id=${id}&from_products=1`;
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ç–æ–≤–∞—Ä–∞
    async function toggleStatus(id) {
        showLoading('–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞...');

        try {
            const formData = new FormData();
            formData.append('action', 'toggle_status');
            formData.append('id', id);

            const response = await fetch(window.location.href, {
                method: 'POST',
                body: formData
            });

            const result = await response.json();

            hideLoading();

            if (result.success) {
                showNotification('‚úÖ –°—Ç–∞—Ç—É—Å —Ç–æ–≤–∞—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω!', 'success');
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
                setTimeout(() => window.location.reload(), 1000);
            } else {
                showNotification('‚ùå –û—à–∏–±–∫–∞: ' + result.message, 'error');
            }

        } catch (error) {
            hideLoading();
            console.error('–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
            showNotification('‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞', 'error');
        }
    }

    // –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    async function deleteProduct(id) {
        if (!confirm('üóëÔ∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?\n\n‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!')) {
            return;
        }

        showLoading('–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞...');

        try {
            const formData = new FormData();
            formData.append('action', 'delete_product');
            formData.append('id', id);

            const response = await fetch(window.location.href, {
                method: 'POST',
                body: formData
            });

            const result = await response.json();

            hideLoading();

            if (result.success) {
                showNotification('‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!', 'success');

                // –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ DOM —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
                const productElement = document.querySelector(`[data-id="${id}"]`);
                if (productElement) {
                    productElement.style.animation = 'fadeOut 0.5s ease-out';
                    setTimeout(() => {
                        productElement.remove();
                        // –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
                        if (document.querySelectorAll('[data-id]').length === 0) {
                            window.location.reload();
                        }
                    }, 500);
                }
            } else {
                showNotification('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + result.message, 'error');
            }

        } catch (error) {
            hideLoading();
            console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
            showNotification('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞', 'error');
        }
    }

    // === –§–£–ù–ö–¶–ò–ò –ú–ê–°–°–û–í–´–• –î–ï–ô–°–¢–í–ò–ô ===

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –º–∞—Å—Å–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    function updateBulkActions() {
        const checkboxes = document.querySelectorAll('.product-checkbox:checked');
        const bulkActions = document.getElementById('bulkActions');
        const selectedCount = document.getElementById('selectedCount');

        selectedProducts.clear();
        checkboxes.forEach(cb => selectedProducts.add(cb.value));

        if (selectedProducts.size > 0) {
            bulkActions.style.display = 'block';
            selectedCount.textContent = selectedProducts.size;

            // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
            document.querySelectorAll('[data-id]').forEach(item => {
                const id = item.dataset.id;
                if (selectedProducts.has(id)) {
                    item.classList.add('selected');
                } else {
                    item.classList.remove('selected');
                }
            });
        } else {
            bulkActions.style.display = 'none';
            document.querySelectorAll('[data-id]').forEach(item => {
                item.classList.remove('selected');
            });
        }
    }

    // –í—ã–±–æ—Ä –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
    function selectAllProducts() {
        const checkboxes = document.querySelectorAll('.product-checkbox');
        const allChecked = Array.from(checkboxes).every(cb => cb.checked);

        checkboxes.forEach(checkbox => {
            checkbox.checked = !allChecked;
        });

        updateBulkActions();

        const message = allChecked ? '‚óªÔ∏è –í—Å–µ —Ç–æ–≤–∞—Ä—ã —Å–Ω—è—Ç—ã —Å –≤—ã–¥–µ–ª–µ–Ω–∏—è' : '‚òëÔ∏è –í—Å–µ —Ç–æ–≤–∞—Ä—ã –≤—ã–¥–µ–ª–µ–Ω—ã';
        showNotification(message, 'info', 2000);
    }

    // –ú–∞—Å—Å–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    async function bulkAction(action) {
        if (selectedProducts.size === 0) {
            showNotification('‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è', 'warning');
            return;
        }

        let confirmMessage = '';
        let loadingMessage = '';

        switch(action) {
            case 'delete':
                confirmMessage = `üóëÔ∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å ${selectedProducts.size} —Ç–æ–≤–∞—Ä–æ–≤?\n\n‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!`;
                loadingMessage = '–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...';
                break;
            case 'activate':
                confirmMessage = `‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å ${selectedProducts.size} —Ç–æ–≤–∞—Ä–æ–≤?`;
                loadingMessage = '–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤...';
                break;
            case 'deactivate':
                confirmMessage = `‚ùå –°–∫—Ä—ã—Ç—å ${selectedProducts.size} —Ç–æ–≤–∞—Ä–æ–≤?`;
                loadingMessage = '–°–∫—Ä—ã—Ç–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...';
                break;
            case 'export':
                loadingMessage = '–≠–∫—Å–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä–æ–≤...';
                break;
        }

        if (confirmMessage && !confirm(confirmMessage)) {
            return;
        }

        if (action === 'export') {
            showLoading(loadingMessage);
            // –ò–º–∏—Ç–∞—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞
            setTimeout(() => {
                hideLoading();
                showNotification('üìä –≠–∫—Å–ø–æ—Ä—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏', 'info');
            }, 2000);
            return;
        }

        showLoading(loadingMessage);

        try {
            const formData = new FormData();
            formData.append('action', 'bulk_action');
            formData.append('bulk_action', action);
            formData.append('selected_products', JSON.stringify(Array.from(selectedProducts)));

            const response = await fetch(window.location.href, {
                method: 'POST',
                body: formData
            });

            const result = await response.json();

            hideLoading();

            if (result.success) {
                showNotification('‚úÖ ' + result.message, 'success');
                setTimeout(() => window.location.reload(), 1500);
            } else {
                showNotification('‚ùå –û—à–∏–±–∫–∞: ' + result.message, 'error');
            }

        } catch (error) {
            hideLoading();
            console.error('–û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è:', error);
            showNotification('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è', 'error');
        }
    }

    // === –°–õ–£–ñ–ï–ë–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –Ω–∞–≤–µ—Ä—Ö
    function scrollToTop() {
        window.scrollTo({top: 0, behavior: 'smooth'});
    }

    // –ü–æ–∫–∞–∑ —Å–ø—Ä–∞–≤–∫–∏
    function showHelp() {
        const helpContent = `
        <h5>üì¶ –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´ v2.1 - –°–ø—Ä–∞–≤–∫–∞</h5>

        <h6>‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏:</h6>
        <ul>
            <li><code>Ctrl + F</code> - –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤</li>
            <li><code>Ctrl + A</code> - –í—ã–±—Ä–∞—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã</li>
            <li><code>Ctrl + N</code> - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä</li>
            <li><code>V</code> - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤–∏–¥ (–ø–ª–∏—Ç–∫–∞/—Å–ø–∏—Å–æ–∫)</li>
        </ul>

        <h6>üîç –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–∏—Å–∫–∞:</h6>
        <ul>
            <li>–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, –æ–ø–∏—Å–∞–Ω–∏—é –∏ —Ç–µ–≥–∞–º</li>
            <li>–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ —Å—Ç–∞—Ç—É—Å—É</li>
            <li>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º</li>
        </ul>

        <h6>‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h6>
        <ul>
            <li>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–º—É —Ä–µ–¥–∞–∫—Ç–æ—Ä—É</li>
            <li>–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</li>
            <li>–ú–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ç–æ–≤–∞—Ä–∞–º–∏</li>
        </ul>
        `;

        showNotification(helpContent, 'info', 10000);
    }

    // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function showNotification(message, type = 'info', duration = 4000) {
        const alertTypes = {
            'success': 'alert-success',
            'error': 'alert-danger', 
            'warning': 'alert-warning',
            'info': 'alert-info'
        };

        const icons = {
            'success': 'fa-check-circle',
            'error': 'fa-exclamation-circle',
            'warning': 'fa-exclamation-triangle', 
            'info': 'fa-info-circle'
        };

        const notification = document.createElement('div');
        notification.className = `alert ${alertTypes[type]} alert-dismissible fade show notification`;
        notification.innerHTML = `
            <i class='fas ${icons[type]} me-2'></i>
            ${message}
            <button type='button' class='btn-close' onclick='this.parentElement.remove()'></button>
        `;

        document.body.appendChild(notification);

        setTimeout(() => {
            if (notification.parentNode) {
                notification.classList.remove('show');
                setTimeout(() => notification.remove(), 300);
            }
        }, duration);
    }

    // –ü–æ–∫–∞–∑ –∑–∞–≥—Ä—É–∑–∫–∏
    function showLoading(message = '–ó–∞–≥—Ä—É–∑–∫–∞...') {
        const loading = document.createElement('div');
        loading.className = 'loading-overlay';
        loading.id = 'loadingOverlay';
        loading.innerHTML = `
            <div class='text-center text-white'>
                <div class='spinner-custom mb-3'></div>
                <h5>${message}</h5>
            </div>
        `;

        document.body.appendChild(loading);
    }

    // –°–∫—Ä—ã—Ç–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    function hideLoading() {
        const loading = document.getElementById('loadingOverlay');
        if (loading) {
            loading.remove();
        }
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    const style = document.createElement('style');
    style.textContent = `
        @keyframes fadeOut {
            from { opacity: 1; transform: scale(1); }
            to { opacity: 0; transform: scale(0.8); }
        }
    `;
    document.head.appendChild(style);

    console.log('üöÄ –ú–ï–ì–ê –ú–û–î–£–õ–¨ –¢–û–í–ê–†–´ v2.1 –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω!');
    console.log('üí° –î–æ—Å—Ç—É–ø–Ω—ã —Ä–µ–∂–∏–º—ã: –ø–ª–∏—Ç–∫–∞/—Å–ø–∏—Å–æ–∫');  
    console.log('üîó –°–≤—è–∑—å —Å —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –∞–∫—Ç–∏–≤–Ω–∞');
    console.log('‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    console.log('üì± –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –∞–∫—Ç–∏–≤–µ–Ω');
    </script>
</body>
</html>
